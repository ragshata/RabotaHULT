# –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç—Å—Ç—É–ø–æ–≤ —É —Ç–µ–∫—Å—Ç–∞
def ded(get_text: str) -> str:
    if get_text is not None:
        split_text = get_text.split("\n")

        if split_text[0] == "":
            split_text.pop(0)
        if split_text[-1] == "":
            split_text.pop(-1)
        save_text = []

        for text in split_text:
            while text.startswith(" "):
                text = text[1:]

            save_text.append(text)
        get_text = "\n".join(save_text)
    else:
        get_text = ""

    return get_text


# –û—á–∏—Å—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –æ—Ç HTML —Ç—ç–≥–æ–≤
def clear_html(get_text: str) -> str:
    if get_text is not None:
        if "<" in get_text:
            get_text = get_text.replace("<", "*")
        if ">" in get_text:
            get_text = get_text.replace(">", "*")
    else:
        get_text = ""

    return get_text


def format_display(fmt: str) -> str:
    """–ü–µ—Ä–µ–≤–æ–¥ —Ñ–æ—Ä–º–∞—Ç–∞ —Ä–∞–±–æ—Ç—ã –≤ —á–µ–ª–æ–≤–µ–∫–æ–ø–æ–Ω—è—Ç–Ω—ã–π –≤–∏–¥"""
    mapping = {
        "hour": "‚è± –ü–æ—á–∞—Å–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞",
        "shift8": "üïó –°–º–µ–Ω–∞ (8 —á–∞—Å–æ–≤)",
        "day12": "üìÖ –°–º–µ–Ω–∞ (12 —á–∞—Å–æ–≤)",
    }
    return mapping.get(fmt, fmt)
